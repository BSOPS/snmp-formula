# {{ salt['pillar.get']('SALT_MANAGED') }}
# Source: {{ source }}
#
#
# snmpd.conf:
#   An configuration file for net-snmp snmpd agent.
#

sysLocation "{{ salt['pillar.get']('snmp:conf:location', 'Unknown (add saltstack pillar)') }}"
sysContact "{{ salt['pillar.get']('snmp:conf:syscontact', 'Root <root@localhost> (add saltstack pillar)') }}"

{% if salt['pillar.get']('snmp:conf:logconnects') is not none %}
{%- if salt['pillar.get']('snmp:conf:logconnects') %}
# dontLogTCPWrappersConnects yes
{%- else %}
dontLogTCPWrappersConnects yes
{%- endif %}
{% endif %}

#       name           incl/excl     subtree         mask(optional)
view    systemview    included   .1.3.6.1.2.1.1
view    systemview    included   .1.3.6.1.2.1.25.1.1

# Version 1/2c users (read only)
{%- for rocommunity in salt['pillar.get']('snmp:conf:rocommunities', '') %}
{%- set source = salt['pillar.get']('snmp:conf:rocommunities:'+ rocommunity +':source', '') %}
{%- if source.__class__ in (().__class__, [].__class__) %}
{%- for src in source %}
rocommunity	{{ rocommunity }}	{{ src}}
{%- endfor %}
{%- else %}
rocommunity	{{ rocommunity }}	{{ source }}
{%- endif %}
{%- endfor %}

# Version 1/2c users (read/write)
{%- for rwcommunity in salt['pillar.get']('snmp:conf:rwcommunities', '') %}
{%- set source = salt['pillar.get']('snmp:conf:rwcommunities:'+ rwcommunity +':source', '') %}
{%- if source.__class__ in (().__class__, [].__class__) %}
{%- for src in source %}
rwcommunity	{{ rwcommunity }}	{{ src}}
{%- endfor %}
{%- else %}
rwcommunity	{{ rwcommunity }}	{{ source }}
{%- endif %}
{%- endfor %}

# Version 3 users (read only)
{%- for user in salt['pillar.get']('snmp:conf:rousers', '') %}
rouser {{ user.username }} auth -V {{ user.username }}_view
createUser {{ user.username }} {{ user.get('authproto', 'MD5') }} {{ user.passphrase }} {{ user.get('privproto', 'AES') }}
view {{ user.username }}_view included {{ user.view }}
{%- endfor %}
# Version 3 users (read/write)
{%- for user in salt['pillar.get']('snmp:conf:rwusers', '') %}
rwuser {{ user.username }} auth -V {{ user.username }}_view
createUser {{ user.username }} {{ user.get('authproto', 'MD5') }} {{ user.passphrase }} {{ user.get('privproto', 'AES') }}
view {{ user.username }}_view included {{ user.view }}
{%- endfor %}

# Extra settings
{% for declaration, values in config.items() %}
{%- if values.__class__ in (().__class__, [].__class__) %}
    {%- for value in values %}
{{declaration}} {{value}}
    {%- endfor %}
{%- else %}
{{declaration}} {{values}}
{%- endif %}
{%- endfor %}
